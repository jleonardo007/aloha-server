# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Call {
  _id: String!
  duration: String!
  finishedAt: DateTime!
  isMissed: Boolean!
  receivedBy: String!
  sentBy: String!
  startedAt: DateTime!
}

type Chat {
  _id: String!
  lastMessageTime: DateTime!
  messages: [Message!]!
  receivedBy: String!
  sentBy: String!
}

type Contact {
  _id: String!
  createdBy: String!
  email: String!
  name: String!
  user: User
}

type ContactOutput {
  _id: String!
  createdBy: String!
  email: String!
  name: String!
  user: PartialUser
}

type ContactServiceResult {
  message: String!
}

input CreateCallInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreateChatInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreateContactInput {
  createdBy: String!
  email: String!
  name: String!
}

input CreateGroupInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreateMediaInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreateMessageInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreateUserInput {
  email: String!
  fullName: String!
  isClosedAccount: Boolean
  password: String!
  profilePicture: String
  status: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DeleteContactInput {
  id: String!
}

input GetContactInput {
  id: String!
}

input GetNewTokenInput {
  _id: String!
}

input GetUserInput {
  email: String!
  password: String!
}

type Group {
  createdBy: User!
  members: [User!]!
  messages: [Message!]!
  name: String!
  picture: String
  updatedBy: User!
}

type Media {
  type: String!
  url: String!
}

type Message {
  _id: String!
  chat: String!
  deletedBy: User!

  """User that sends the message"""
  from: User!

  """User that sends chat"""
  group: String!
  hasMedia: Boolean!
  isDeleted: Boolean!
  isRead: Boolean!
  media: Media!

  """User ids that read the message"""
  readBy: [String!]!
  receivedAt: DateTime!

  """Message replied id"""
  repliedTo: String!
  sentAt: DateTime!
  textContent: String!

  """Users that receive the message"""
  to: [User!]!
}

type Mutation {
  createCall(createCallInput: CreateCallInput!): Call!
  createChat(createChatInput: CreateChatInput!): Chat!
  createContact(createContactInput: CreateContactInput!): ContactOutput!
  createGroup(createGroupInput: CreateGroupInput!): Group!
  createMedia(createMediaInput: CreateMediaInput!): Media!
  createMessage(createMessageInput: CreateMessageInput!): Message!
  deleteContact(deleteContactInput: DeleteContactInput!): ContactServiceResult!
  getNewRefreshToken(getNewTokenInput: GetNewTokenInput!): String!
  removeCall(id: Int!): Call!
  removeChat(id: Int!): Chat!
  removeGroup(id: Int!): Group!
  removeMedia(id: Int!): Media!
  removeMessage(id: Int!): Message!
  signUpWithEmail(signUpInput: CreateUserInput!): UserOutput!
  signUpWithGoogle(tokenInput: TokenInput!): UserOutput!
  updateCall(updateCallInput: UpdateCallInput!): Call!
  updateChat(updateChatInput: UpdateChatInput!): Chat!
  updateContact(updateContactInput: UpdateContactInput!): ContactServiceResult!
  updateGroup(updateGroupInput: UpdateGroupInput!): Group!
  updateMedia(updateMediaInput: UpdateMediaInput!): Media!
  updateMessage(updateMessageInput: UpdateMessageInput!): Message!
}

type PartialUser {
  _id: String
  email: String
  fullName: String
  isCloseAccount: Boolean
  lastTimeConnected: DateTime
  profilePicture: String
  status: String
}

type Query {
  call(id: Int!): Call!
  calls: [Call!]!
  chat(id: Int!): Chat!
  chats: [Chat!]!
  getContact(getContactInput: GetContactInput!): Contact!
  getNewAccessToken(getNewTokenInput: GetNewTokenInput!): String!
  group(id: Int!): Group!
  groups: [Group!]!
  media(id: Int!): Media!
  message(id: Int!): Message!
  messages: [Message!]!
  signInWithEmail(signInInput: GetUserInput!): UserOutput!
  signInWithGoogle(tokenInput: TokenInput!): UserOutput!
  users: [User!]!
}

input TokenInput {
  tokenFromGoogle: String!
}

input UpdateCallInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input UpdateChatInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input UpdateContactInput {
  id: String!
  name: String!
}

input UpdateGroupInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input UpdateMediaInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input UpdateMessageInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

type User {
  _id: String!
  contacts: [Contact!]!
  email: String!
  fullName: String!
  groups: [Group!]!
  isCloseAccount: Boolean!
  lastTimeConnected: DateTime!
  password: String!
  profilePicture: String
  receivedCalls: [Call!]!
  receivedChats: [Chat!]!
  refreshToken: String!
  sentCalls: [Call!]!
  sentChats: [Chat!]!
  status: String
}

type UserOutput {
  _id: String!
  accessToken: String!
  calls: [Call!]!
  chats: [Chat!]!
  contacts: [Contact!]!
  email: String!
  fullName: String!
  groups: [Group!]!
  isCloseAccount: Boolean!
  lastTimeConnected: DateTime!
  profilePicture: String
  status: String
}